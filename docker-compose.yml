version: '3.8'

services:
  mariadb:
    image: mariadb:11-jammy  # Użyj konkretnej wersji
    container_name: autoservice_db
    restart: unless-stopped
    environment:
      MARIADB_RANDOM_ROOT_PASSWORD: "${MARIADB_RANDOM_ROOT_PASSWORD:-yes}"
      MARIADB_DATABASE: "${MARIADB_DATABASE:-autoservice_db}"
      MARIADB_USER: "${MARIADB_USER:-autoservice_user}"
      MARIADB_PASSWORD: "${MARIADB_PASSWORD}"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./create_db.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - autoservice_network
    ports:
      - "3306:3306"  # Opcjonalnie dla debugowania
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      interval: 15s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production  # Jeśli użyjesz multi-stage
    container_name: autoservice_backend
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      DATABASE_URL: "mysql+pymysql://${MARIADB_USER:-autoservice_user}:${MARIADB_PASSWORD}@mariadb:3306/${MARIADB_DATABASE:-autoservice_db}"
      SECRET_KEY: "${SECRET_KEY}"
      ALGORITHM: "${ALGORITHM:-HS256}"
      ACCESS_TOKEN_EXPIRE_MINUTES: "${ACCESS_TOKEN_EXPIRE_MINUTES:-30}"
    volumes:
      - backend_logs:/app/logs
      # Usuń mapowanie kodu w produkcji: - ./backend:/app
    ports:
      - "8000:8000"
    networks:
      - autoservice_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: autoservice_frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_URL: "${NEXT_PUBLIC_API_URL:-http://localhost:8000}"
    ports:
      - "3000:3000"
    networks:
      - autoservice_network

volumes:
  mysql_data:
    driver: local
  backend_logs:
    driver: local

networks:
  autoservice_network:
    driver: bridge